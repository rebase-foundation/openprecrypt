{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1","program":"/Users/jacob/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","umbral_pre","--edition=2021","/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"default-rng\"","--cfg","feature=\"getrandom\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde-support\"","-C","metadata=6769485a8a9c1a4c","-C","extra-filename=-6769485a8a9c1a4c","--out-dir","/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps","-L","dependency=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps","--extern","aead=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libaead-bf5cbb8a63db51f9.rmeta","--extern","base64=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libbase64-f02a468c243eb14b.rmeta","--extern","chacha20poly1305=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libchacha20poly1305-ad1eb493066c9dc2.rmeta","--extern","digest=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libdigest-343058c004f957cd.rmeta","--extern","ecdsa=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libecdsa-c8a2f0560a3b3289.rmeta","--extern","elliptic_curve=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libelliptic_curve-7347fd0deac2d5c5.rmeta","--extern","generic_array=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libgeneric_array-e8f31e181460fab7.rmeta","--extern","getrandom=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libgetrandom-b09b96bb72763ad8.rmeta","--extern","hex=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libhex-07e11f94048a47ca.rmeta","--extern","hkdf=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libhkdf-e74353d3277d7866.rmeta","--extern","k256=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libk256-c27fac6fe79f4c21.rmeta","--extern","rand_core=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/librand_core-ad05f400cc073d80.rmeta","--extern","serde=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libserde-d10d3c5d3f6e8487.rmeta","--extern","sha2=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libsha2-f8d9b1f8b4824779.rmeta","--extern","signature=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libsignature-b5b37cb82c678da0.rmeta","--extern","subtle=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libsubtle-b9be4322f5981da9.rmeta","--extern","typenum=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libtypenum-e67a2737b5a049c3.rmeta","--extern","zeroize=/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libzeroize-c32d34f21f97ed08.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/jacob/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/jacob/Developer/prenetwork/prenetcli/target/rls/debug/deps/libumbral_pre-6769485a8a9c1a4c.rmeta"},"prelude":{"crate_id":{"name":"umbral_pre","disambiguator":[13406437776990856588,0]},"crate_root":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src","external_crates":[{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18223145686901155897,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14433101958683640425,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15722400896539721154,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[382214965992916939,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":5,"id":{"name":"generic_array","disambiguator":[1698478991367040497,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":6,"id":{"name":"typenum","disambiguator":[17866519593418046750,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":7,"id":{"name":"rand_core","disambiguator":[5867073439090821278,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":8,"id":{"name":"getrandom","disambiguator":[13157409777477759370,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17816606192966835472,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":10,"id":{"name":"libc","disambiguator":[8739973106685861730,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":11,"id":{"name":"serde","disambiguator":[5147601030182017167,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":12,"id":{"name":"std","disambiguator":[18209756222486151562,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":13,"id":{"name":"libc","disambiguator":[12260471395692023054,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":14,"id":{"name":"unwind","disambiguator":[15696538619420672016,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":15,"id":{"name":"cfg_if","disambiguator":[15516093453040911438,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":16,"id":{"name":"hashbrown","disambiguator":[14430044855280342380,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":17,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[22492058053637715,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":18,"id":{"name":"rustc_demangle","disambiguator":[1365830122759399854,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":19,"id":{"name":"std_detect","disambiguator":[2559965663903648119,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":20,"id":{"name":"addr2line","disambiguator":[15316470272468687976,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":21,"id":{"name":"gimli","disambiguator":[643092319478642194,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":22,"id":{"name":"object","disambiguator":[981374929740806444,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":23,"id":{"name":"memchr","disambiguator":[10791241492110567838,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":24,"id":{"name":"panic_unwind","disambiguator":[7534896682886677764,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","num":25,"id":{"name":"serde_derive","disambiguator":[13524034741703023901,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":26,"id":{"name":"digest","disambiguator":[10365662177638201420,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":27,"id":{"name":"elliptic_curve","disambiguator":[10719101815768017131,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":28,"id":{"name":"crypto_bigint","disambiguator":[9048729385001827881,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":29,"id":{"name":"subtle","disambiguator":[15374362046402696794,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":30,"id":{"name":"zeroize","disambiguator":[15098981531028755380,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":31,"id":{"name":"group","disambiguator":[1674042671520040513,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":32,"id":{"name":"ff","disambiguator":[13056981312033672439,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":33,"id":{"name":"sec1","disambiguator":[15350449635904483140,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":34,"id":{"name":"der","disambiguator":[13581384673114532226,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":35,"id":{"name":"const_oid","disambiguator":[8453690356313397732,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":36,"id":{"name":"base16ct","disambiguator":[12996652035442572915,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":37,"id":{"name":"k256","disambiguator":[7791128320907716940,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","num":38,"id":{"name":"ecdsa","disambiguator":[8676423783988474793,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","num":39,"id":{"name":"signature","disambiguator":[13390430674684149427,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":40,"id":{"name":"rfc6979","disambiguator":[15619573340329451524,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":41,"id":{"name":"hmac","disambiguator":[1627665364383521698,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":42,"id":{"name":"crypto_mac","disambiguator":[17589050611378429937,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":43,"id":{"name":"sha2","disambiguator":[4139567433751019045,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":44,"id":{"name":"block_buffer","disambiguator":[9409465735937999441,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","num":45,"id":{"name":"opaque_debug","disambiguator":[13402968504476262561,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":46,"id":{"name":"aead","disambiguator":[7629151803325273316,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":47,"id":{"name":"chacha20poly1305","disambiguator":[12343456189919887567,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":48,"id":{"name":"cipher","disambiguator":[16294627488306982416,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":49,"id":{"name":"poly1305","disambiguator":[5711458054133500981,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":50,"id":{"name":"universal_hash","disambiguator":[13112396865337235589,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":51,"id":{"name":"chacha20","disambiguator":[6169486216114634374,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","num":52,"id":{"name":"hkdf","disambiguator":[8918389856466440102,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","num":53,"id":{"name":"hex","disambiguator":[2352402426326920480,0]}},{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","num":54,"id":{"name":"base64","disambiguator":[4731084972090079967,0]}}],"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":0,"byte_end":6077,"line_start":1,"line_end":156,"column_start":1,"column_end":52}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5278,"byte_end":5285,"line_start":140,"line_end":140,"column_start":19,"column_end":26},"alias_span":null,"name":"Capsule","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5287,"byte_end":5307,"line_start":140,"line_end":140,"column_start":28,"column_end":48},"alias_span":null,"name":"OpenReencryptedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1507},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5333,"byte_end":5344,"line_start":141,"line_end":141,"column_start":24,"column_end":35},"alias_span":null,"name":"CapsuleFrag","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1521},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5346,"byte_end":5374,"line_start":141,"line_end":141,"column_start":37,"column_end":65},"alias_span":null,"name":"CapsuleFragVerificationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5376,"byte_end":5395,"line_start":141,"line_end":141,"column_start":67,"column_end":86},"alias_span":null,"name":"VerifiedCapsuleFrag","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1583},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5412,"byte_end":5427,"line_start":142,"line_end":142,"column_start":15,"column_end":30},"alias_span":null,"name":"DecryptionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1575},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5429,"byte_end":5444,"line_start":142,"line_end":142,"column_start":32,"column_end":47},"alias_span":null,"name":"EncryptionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1619},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5466,"byte_end":5473,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"alias_span":null,"name":"KeyFrag","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5475,"byte_end":5499,"line_start":143,"line_end":143,"column_start":29,"column_end":53},"alias_span":null,"name":"KeyFragVerificationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1647},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5501,"byte_end":5516,"line_start":143,"line_end":143,"column_start":55,"column_end":70},"alias_span":null,"name":"VerifiedKeyFrag","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1678},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5534,"byte_end":5543,"line_start":144,"line_end":144,"column_start":16,"column_end":25},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1668},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5545,"byte_end":5554,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1690},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5556,"byte_end":5572,"line_start":144,"line_end":144,"column_start":38,"column_end":54},"alias_span":null,"name":"SecretKeyFactory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1657},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5574,"byte_end":5583,"line_start":144,"line_end":144,"column_start":56,"column_end":65},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1673},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5585,"byte_end":5591,"line_start":144,"line_end":144,"column_start":67,"column_end":73},"alias_span":null,"name":"Signer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5613,"byte_end":5629,"line_start":146,"line_end":146,"column_start":5,"column_end":21},"alias_span":null,"name":"decrypt_original","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5631,"byte_end":5650,"line_start":146,"line_end":146,"column_start":23,"column_end":42},"alias_span":null,"name":"decrypt_reencrypted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1156},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5652,"byte_end":5668,"line_start":146,"line_end":146,"column_start":44,"column_end":60},"alias_span":null,"name":"encrypt_with_rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5670,"byte_end":5694,"line_start":146,"line_end":146,"column_start":62,"column_end":86},"alias_span":null,"name":"generate_kfrags_with_rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5700,"byte_end":5718,"line_start":147,"line_end":147,"column_start":5,"column_end":23},"alias_span":null,"name":"reencrypt_with_rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1706},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5720,"byte_end":5737,"line_start":147,"line_end":147,"column_start":25,"column_end":42},"alias_span":null,"name":"ReencryptionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1186},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5763,"byte_end":5782,"line_start":149,"line_end":149,"column_start":22,"column_end":41},"alias_span":null,"name":"CanBeZeroizedOnDrop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5784,"byte_end":5793,"line_start":149,"line_end":149,"column_start":43,"column_end":52},"alias_span":null,"name":"SecretBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1726},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5818,"byte_end":5835,"line_start":151,"line_end":151,"column_start":5,"column_end":22},"alias_span":null,"name":"ConstructionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1259},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5837,"byte_end":5860,"line_start":151,"line_end":151,"column_start":24,"column_end":47},"alias_span":null,"name":"DeserializableFromArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1744},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5862,"byte_end":5882,"line_start":151,"line_end":151,"column_start":49,"column_end":69},"alias_span":null,"name":"DeserializationError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1273},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5884,"byte_end":5895,"line_start":151,"line_end":151,"column_start":71,"column_end":82},"alias_span":null,"name":"HasTypeName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5901,"byte_end":5921,"line_start":152,"line_end":152,"column_start":5,"column_end":25},"alias_span":null,"name":"RepresentableAsArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1255},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5923,"byte_end":5942,"line_start":152,"line_end":152,"column_start":27,"column_end":46},"alias_span":null,"name":"SerializableToArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1257},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5944,"byte_end":5969,"line_start":152,"line_end":152,"column_start":48,"column_end":73},"alias_span":null,"name":"SerializableToSecretArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1735},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":5971,"byte_end":5988,"line_start":152,"line_end":152,"column_start":75,"column_end":92},"alias_span":null,"name":"SizeMismatchError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":6040,"byte_end":6047,"line_start":156,"line_end":156,"column_start":15,"column_end":22},"alias_span":null,"name":"encrypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1164},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":6049,"byte_end":6064,"line_start":156,"line_end":156,"column_start":24,"column_end":39},"alias_span":null,"name":"generate_kfrags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1167},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":6066,"byte_end":6075,"line_start":156,"line_end":156,"column_start":41,"column_end":50},"alias_span":null,"name":"reencrypt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":0,"byte_end":6077,"line_start":1,"line_end":156,"column_start":1,"column_end":52},"name":"","qualname":"::","value":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":139},{"krate":0,"index":293},{"krate":0,"index":494},{"krate":0,"index":575},{"krate":0,"index":623},{"krate":0,"index":654},{"krate":0,"index":849},{"krate":0,"index":1088},{"krate":0,"index":1094},{"krate":0,"index":1172},{"krate":0,"index":1200},{"krate":0,"index":1281},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1439},{"krate":0,"index":1442},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458},{"krate":0,"index":1461}],"decl_id":null,"docs":" `umbral-pre` is the Rust implementation of the [Umbral][umbral]\n threshold proxy re-encryption scheme.","sig":null,"attributes":[{"value":"/ `umbral-pre` is the Rust implementation of the [Umbral][umbral]","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/ threshold proxy re-encryption scheme.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":68,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":110,"byte_end":113,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `umbral-pre`, Alice (the data owner) can delegate decryption rights to Bob","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":114,"byte_end":198,"line_start":4,"line_end":4,"column_start":1,"column_end":85}},{"value":"/ for any ciphertext intended to her, through a re-encryption process","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":199,"byte_end":270,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ performed by a set of semi-trusted proxies or Ursulas.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":271,"byte_end":329,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/ When a threshold of these proxies participate by performing re-encryption,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":330,"byte_end":408,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ Bob is able to combine these independent re-encryptions and decrypt the original message","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":409,"byte_end":501,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/ using his private key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":502,"byte_end":528,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":529,"byte_end":532,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Available feature flags","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":533,"byte_end":563,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":564,"byte_end":567,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `default-rng` - adds methods that use the system RNG (default).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":568,"byte_end":637,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ * `serde-support` - implements `serde`-based serialization and deserialization.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":638,"byte_end":721,"line_start":14,"line_end":14,"column_start":1,"column_end":84}},{"value":"/ * `bindings-python` - adds a `bindings_python` submodule allowing dependent crates","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":722,"byte_end":808,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/        to use and re-export some of the Python-wrapped Umbral types.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":809,"byte_end":881,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":882,"byte_end":885,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":886,"byte_end":897,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":898,"byte_end":901,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":902,"byte_end":909,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use umbral_pre::*;","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":910,"byte_end":932,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":933,"byte_end":936,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // As in any public-key cryptosystem, users need a pair of public and private keys.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":937,"byte_end":1024,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ // Additionally, users that delegate access to their data (like Alice, in this example)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1025,"byte_end":1116,"line_start":24,"line_end":24,"column_start":1,"column_end":92}},{"value":"/ // need a signing keypair.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1117,"byte_end":1147,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1148,"byte_end":1151,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Key Generation (on Alice's side)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1152,"byte_end":1191,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ let alice_sk = SecretKey::random();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1192,"byte_end":1231,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ let alice_pk = alice_sk.public_key();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1232,"byte_end":1273,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ let signer = Signer::new(SecretKey::random());","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1274,"byte_end":1324,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ let verifying_pk = signer.verifying_key();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1325,"byte_end":1371,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1372,"byte_end":1375,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // Key Generation (on Bob's side)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1376,"byte_end":1413,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/ let bob_sk = SecretKey::random();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1414,"byte_end":1451,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ let bob_pk = bob_sk.public_key();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1452,"byte_end":1489,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1490,"byte_end":1493,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Now let's encrypt data with Alice's public key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1494,"byte_end":1548,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/ // Invocation of `encrypt()` returns both the ciphertext and a capsule.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1549,"byte_end":1624,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ // Note that anyone with Alice's public key can perform this operation.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1625,"byte_end":1700,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1701,"byte_end":1704,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let plaintext = b\"peace at dawn\";","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1705,"byte_end":1742,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ let (capsule, ciphertext) = encrypt(&alice_pk, plaintext).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1743,"byte_end":1814,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1815,"byte_end":1818,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Since data was encrypted with Alice's public key, Alice can open the capsule","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1819,"byte_end":1902,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ // and decrypt the ciphertext with her private key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1903,"byte_end":1958,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1959,"byte_end":1962,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let plaintext_alice = decrypt_original(&alice_sk, &capsule, &ciphertext).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":1963,"byte_end":2049,"line_start":47,"line_end":47,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(&plaintext_alice as &[u8], plaintext);","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2050,"byte_end":2103,"line_start":48,"line_end":48,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2104,"byte_end":2107,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // When Alice wants to grant Bob access to open her encrypted messages,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2108,"byte_end":2183,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ // she creates re-encryption key fragments, or \"kfrags\", which are then","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2184,"byte_end":2259,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ // sent to `shares` proxies or Ursulas.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2260,"byte_end":2303,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2304,"byte_end":2307,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let shares = 3; // how many fragments to create","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2308,"byte_end":2359,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let threshold = 2; // how many should be enough to decrypt","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2360,"byte_end":2422,"line_start":55,"line_end":55,"column_start":1,"column_end":63}},{"value":"/ let verified_kfrags = generate_kfrags(&alice_sk, &bob_pk, &signer, threshold, shares, true, true);","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2423,"byte_end":2525,"line_start":56,"line_end":56,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2526,"byte_end":2529,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Bob asks several Ursulas to re-encrypt the capsule so he can open it.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2530,"byte_end":2606,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ // Each Ursula performs re-encryption on the capsule using the kfrag provided by Alice,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2607,"byte_end":2698,"line_start":59,"line_end":59,"column_start":1,"column_end":92}},{"value":"/ // obtaining this way a \"capsule fragment\", or cfrag.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2699,"byte_end":2756,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2757,"byte_end":2760,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // Simulate network transfer","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2761,"byte_end":2793,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ let kfrag0 = KeyFrag::from_array(&verified_kfrags[0].to_array()).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2794,"byte_end":2872,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ let kfrag1 = KeyFrag::from_array(&verified_kfrags[1].to_array()).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2873,"byte_end":2951,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2952,"byte_end":2955,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // Bob collects the resulting cfrags from several Ursulas.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":2956,"byte_end":3018,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/ // Bob must gather at least `threshold` cfrags in order to open the capsule.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3019,"byte_end":3099,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3100,"byte_end":3103,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // Ursulas must check that the received kfrags are valid","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3104,"byte_end":3164,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ // and perform the reencryption","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3165,"byte_end":3200,"line_start":70,"line_end":70,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3201,"byte_end":3204,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // Ursula 0","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3205,"byte_end":3220,"line_start":72,"line_end":72,"column_start":1,"column_end":16}},{"value":"/ let verified_kfrag0 = kfrag0.verify(&verifying_pk, Some(&alice_pk), Some(&bob_pk)).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3221,"byte_end":3317,"line_start":73,"line_end":73,"column_start":1,"column_end":97}},{"value":"/ let verified_cfrag0 = reencrypt(&capsule, verified_kfrag0);","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3318,"byte_end":3381,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3382,"byte_end":3385,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ // Ursula 1","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3386,"byte_end":3401,"line_start":76,"line_end":76,"column_start":1,"column_end":16}},{"value":"/ let verified_kfrag1 = kfrag1.verify(&verifying_pk, Some(&alice_pk), Some(&bob_pk)).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3402,"byte_end":3498,"line_start":77,"line_end":77,"column_start":1,"column_end":97}},{"value":"/ let verified_cfrag1 = reencrypt(&capsule, verified_kfrag1);","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3499,"byte_end":3562,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3563,"byte_end":3566,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3567,"byte_end":3577,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3578,"byte_end":3581,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Simulate network transfer","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3582,"byte_end":3614,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ let cfrag0 = CapsuleFrag::from_array(&verified_cfrag0.to_array()).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3615,"byte_end":3694,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/ let cfrag1 = CapsuleFrag::from_array(&verified_cfrag1.to_array()).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3695,"byte_end":3774,"line_start":84,"line_end":84,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3775,"byte_end":3778,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // Finally, Bob opens the capsule by using at least `threshold` cfrags,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3779,"byte_end":3854,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ // and then decrypts the re-encrypted ciphertext.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3855,"byte_end":3908,"line_start":87,"line_end":87,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Bob must check that cfrags are valid","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3913,"byte_end":3956,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/ let verified_cfrag0 = cfrag0","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3957,"byte_end":3989,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/     .verify(&capsule, &verifying_pk, &alice_pk, &bob_pk)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":3990,"byte_end":4050,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/     .unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4051,"byte_end":4069,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/ let verified_cfrag1 = cfrag1","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4070,"byte_end":4102,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/     .verify(&capsule, &verifying_pk, &alice_pk, &bob_pk)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4103,"byte_end":4163,"line_start":94,"line_end":94,"column_start":1,"column_end":61}},{"value":"/     .unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4164,"byte_end":4182,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4183,"byte_end":4186,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let plaintext_bob = decrypt_reencrypted(","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4187,"byte_end":4231,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/     &bob_sk, &alice_pk, &capsule, [verified_cfrag0, verified_cfrag1], &ciphertext).unwrap();","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4232,"byte_end":4328,"line_start":98,"line_end":98,"column_start":1,"column_end":97}},{"value":"/ assert_eq!(&plaintext_bob as &[u8], plaintext);","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4329,"byte_end":4380,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4381,"byte_end":4388,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4389,"byte_end":4392,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ [umbral]: https://github.com/nucypher/umbral-doc/blob/master/umbral-doc.pdf","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4393,"byte_end":4472,"line_start":102,"line_end":102,"column_start":1,"column_end":80}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4528,"byte_end":4551,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4552,"byte_end":4615,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"no_std","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/lib.rs","byte_start":4616,"byte_end":4626,"line_start":107,"line_end":107,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7099,"byte_end":7113,"line_start":30,"line_end":30,"column_start":5,"column_end":19},"name":"NoCapsuleFrags","qualname":"::capsule::OpenReencryptedError::NoCapsuleFrags","value":"OpenReencryptedError::NoCapsuleFrags","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" An empty capsule fragment list is given.\n","sig":null,"attributes":[{"value":"/ An empty capsule fragment list is given.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7050,"byte_end":7094,"line_start":29,"line_end":29,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7296,"byte_end":7318,"line_start":33,"line_end":33,"column_start":5,"column_end":27},"name":"MismatchedCapsuleFrags","qualname":"::capsule::OpenReencryptedError::MismatchedCapsuleFrags","value":"OpenReencryptedError::MismatchedCapsuleFrags","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" Capsule fragments are mismatched (originated from [`KeyFrag`](crate::KeyFrag) objects\n generated by different [`generate_kfrags`](crate::generate_kfrags) calls).\n","sig":null,"attributes":[{"value":"/ Capsule fragments are mismatched (originated from [`KeyFrag`](crate::KeyFrag) objects","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7119,"byte_end":7208,"line_start":31,"line_end":31,"column_start":5,"column_end":94}},{"value":"/ generated by different [`generate_kfrags`](crate::generate_kfrags) calls).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7213,"byte_end":7291,"line_start":32,"line_end":32,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7382,"byte_end":7403,"line_start":35,"line_end":35,"column_start":5,"column_end":26},"name":"RepeatingCapsuleFrags","qualname":"::capsule::OpenReencryptedError::RepeatingCapsuleFrags","value":"OpenReencryptedError::RepeatingCapsuleFrags","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" Some of the given capsule fragments are repeated.\n","sig":null,"attributes":[{"value":"/ Some of the given capsule fragments are repeated.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7324,"byte_end":7377,"line_start":34,"line_end":34,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7571,"byte_end":7587,"line_start":39,"line_end":39,"column_start":5,"column_end":21},"name":"ValidationFailed","qualname":"::capsule::OpenReencryptedError::ValidationFailed","value":"OpenReencryptedError::ValidationFailed","parent":{"krate":0,"index":1464},"children":[],"decl_id":null,"docs":" Internal validation of the result has failed.\n Can be caused by an incorrect (possibly modified) capsule\n or some of the capsule fragments.\n","sig":null,"attributes":[{"value":"/ Internal validation of the result has failed.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7409,"byte_end":7458,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/ Can be caused by an incorrect (possibly modified) capsule","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7463,"byte_end":7524,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ or some of the capsule fragments.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7529,"byte_end":7566,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7023,"byte_end":7043,"line_start":28,"line_end":28,"column_start":10,"column_end":30},"name":"OpenReencryptedError","qualname":"::capsule::OpenReencryptedError","value":"pub enum OpenReencryptedError {\n    NoCapsuleFrags,\n    MismatchedCapsuleFrags,\n    RepeatingCapsuleFrags,\n    ValidationFailed,\n}","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1469},{"krate":0,"index":1471}],"decl_id":null,"docs":" Errors that can happen when opening a `Capsule` using reencrypted `CapsuleFrag` objects.\n","sig":null,"attributes":[{"value":"/ Errors that can happen when opening a `Capsule` using reencrypted `CapsuleFrag` objects.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":6893,"byte_end":6985,"line_start":26,"line_end":26,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8204,"byte_end":8211,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"Capsule","qualname":"::capsule::Capsule","value":"Capsule {  }","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"decl_id":null,"docs":" Encapsulated symmetric key used to encrypt the plaintext.\n","sig":null,"attributes":[{"value":"/ Encapsulated symmetric key used to encrypt the plaintext.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8090,"byte_end":8151,"line_start":53,"line_end":53,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22194,"byte_end":22205,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"CapsuleFrag","qualname":"::capsule_frag::CapsuleFrag","value":"CapsuleFrag {  }","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"decl_id":null,"docs":" A reencrypted fragment of a [`Capsule`] created by a proxy.\n","sig":null,"attributes":[{"value":"/ A reencrypted fragment of a [`Capsule`] created by a proxy.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22084,"byte_end":22147,"line_start":122,"line_end":122,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24546,"byte_end":24571,"line_start":202,"line_end":202,"column_start":5,"column_end":30},"name":"IncorrectKeyFragSignature","qualname":"::capsule_frag::CapsuleFragVerificationError::IncorrectKeyFragSignature","value":"CapsuleFragVerificationError::IncorrectKeyFragSignature","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" Inconsistent internal state leading to signature verification failure.\n","sig":null,"attributes":[{"value":"/ Inconsistent internal state leading to signature verification failure.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24467,"byte_end":24541,"line_start":201,"line_end":201,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24657,"byte_end":24678,"line_start":204,"line_end":204,"column_start":5,"column_end":26},"name":"IncorrectReencryption","qualname":"::capsule_frag::CapsuleFragVerificationError::IncorrectReencryption","value":"CapsuleFragVerificationError::IncorrectReencryption","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":" Inconsistent internal state leading to commitment verification failure.\n","sig":null,"attributes":[{"value":"/ Inconsistent internal state leading to commitment verification failure.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24577,"byte_end":24652,"line_start":203,"line_end":203,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24432,"byte_end":24460,"line_start":200,"line_end":200,"column_start":10,"column_end":38},"name":"CapsuleFragVerificationError","qualname":"::capsule_frag::CapsuleFragVerificationError","value":"pub enum CapsuleFragVerificationError {\n    IncorrectKeyFragSignature,\n    IncorrectReencryption,\n}","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1524}],"decl_id":null,"docs":" Possible errors that can be returned by [`CapsuleFrag::verify`].\n","sig":null,"attributes":[{"value":"/ Possible errors that can be returned by [`CapsuleFrag::verify`].","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24313,"byte_end":24381,"line_start":198,"line_end":198,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":25818,"byte_end":25824,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"verify","qualname":"<CapsuleFrag>::verify","value":"pub fn verify(Self, &Capsule, &PublicKey, &PublicKey, &PublicKey)\n-> Result<VerifiedCapsuleFrag, (CapsuleFragVerificationError, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Verifies the integrity of the capsule fragment, given the original capsule,\n the encrypting party's key, the decrypting party's key, and the signing key.\n","sig":null,"attributes":[{"value":"/ Verifies the integrity of the capsule fragment, given the original capsule,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":25597,"byte_end":25676,"line_start":238,"line_end":238,"column_start":5,"column_end":84}},{"value":"/ the encrypting party's key, the decrypting party's key, and the signing key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":25681,"byte_end":25761,"line_start":239,"line_end":239,"column_start":5,"column_end":85}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":25766,"byte_end":25806,"line_start":240,"line_end":240,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28096,"byte_end":28113,"line_start":309,"line_end":309,"column_start":12,"column_end":29},"name":"skip_verification","qualname":"<CapsuleFrag>::skip_verification","value":"pub fn skip_verification(Self) -> VerifiedCapsuleFrag","parent":null,"children":[],"decl_id":null,"docs":" Explicitly skips verification.\n Useful in cases when the verifying keys are impossible to obtain independently.","sig":null,"attributes":[{"value":"/ Explicitly skips verification.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":27860,"byte_end":27894,"line_start":305,"line_end":305,"column_start":5,"column_end":39}},{"value":"/ Useful in cases when the verifying keys are impossible to obtain independently.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":27899,"byte_end":27982,"line_start":306,"line_end":306,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":27987,"byte_end":27990,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ **Warning:** make sure you considered the implications of not enforcing verification.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":27995,"byte_end":28084,"line_start":308,"line_end":308,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28524,"byte_end":28543,"line_start":319,"line_end":319,"column_start":12,"column_end":31},"name":"VerifiedCapsuleFrag","qualname":"::capsule_frag::VerifiedCapsuleFrag","value":"VerifiedCapsuleFrag {  }","parent":null,"children":[{"krate":0,"index":1535}],"decl_id":null,"docs":" Verified capsule fragment, good for dencryption.\n Can be serialized, but cannot be deserialized directly.\n It can only be obtained from [`CapsuleFrag::verify`] or [`CapsuleFrag::skip_verification`].\n","sig":null,"attributes":[{"value":"/ Verified capsule fragment, good for dencryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28198,"byte_end":28250,"line_start":314,"line_end":314,"column_start":1,"column_end":53}},{"value":"/ Can be serialized, but cannot be deserialized directly.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28251,"byte_end":28310,"line_start":315,"line_end":315,"column_start":1,"column_end":60}},{"value":"/ It can only be obtained from [`CapsuleFrag::verify`] or [`CapsuleFrag::skip_verification`].","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28311,"byte_end":28406,"line_start":316,"line_end":316,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29630,"byte_end":29649,"line_start":361,"line_end":361,"column_start":12,"column_end":31},"name":"from_verified_bytes","qualname":"<VerifiedCapsuleFrag>::from_verified_bytes","value":"pub fn from_verified_bytes<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Result<Self, DeserializationError>","parent":null,"children":[],"decl_id":null,"docs":" Restores a verified capsule frag directly from serialized bytes,\n skipping [`CapsuleFrag::verify`] call.","sig":null,"attributes":[{"value":"/ Restores a verified capsule frag directly from serialized bytes,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29395,"byte_end":29463,"line_start":356,"line_end":356,"column_start":5,"column_end":73}},{"value":"/ skipping [`CapsuleFrag::verify`] call.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29468,"byte_end":29510,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29515,"byte_end":29518,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Intended for internal storage;","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29523,"byte_end":29557,"line_start":359,"line_end":359,"column_start":5,"column_end":39}},{"value":"/ make sure that the bytes come from a trusted source.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29562,"byte_end":29618,"line_start":360,"line_end":360,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":30060,"byte_end":30068,"line_start":369,"line_end":369,"column_start":12,"column_end":20},"name":"unverify","qualname":"<VerifiedCapsuleFrag>::unverify","value":"pub fn unverify(Self) -> CapsuleFrag","parent":null,"children":[],"decl_id":null,"docs":" Clears the verification status from the capsule frag.\n Useful for the cases where it needs to be put in the protocol structure\n containing [`CapsuleFrag`] types (since those are the ones\n that can be serialized/deserialized freely).\n","sig":null,"attributes":[{"value":"/ Clears the verification status from the capsule frag.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29791,"byte_end":29848,"line_start":365,"line_end":365,"column_start":5,"column_end":62}},{"value":"/ Useful for the cases where it needs to be put in the protocol structure","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29853,"byte_end":29928,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ containing [`CapsuleFrag`] types (since those are the ones","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29933,"byte_end":29995,"line_start":367,"line_end":367,"column_start":5,"column_end":67}},{"value":"/ that can be serialized/deserialized freely).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":30000,"byte_end":30048,"line_start":368,"line_end":368,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34596,"byte_end":34607,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"CurveScalar","qualname":"::curve::CurveScalar","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37807,"byte_end":37817,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"CurvePoint","qualname":"::curve::CurvePoint","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":42772,"byte_end":42789,"line_start":19,"line_end":19,"column_start":5,"column_end":22},"name":"PlaintextTooLarge","qualname":"::dem::EncryptionError::PlaintextTooLarge","value":"EncryptionError::PlaintextTooLarge","parent":{"krate":0,"index":1575},"children":[],"decl_id":null,"docs":" Given plaintext is too large for the backend to handle.\n","sig":null,"attributes":[{"value":"/ Given plaintext is too large for the backend to handle.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":42708,"byte_end":42767,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":42686,"byte_end":42701,"line_start":17,"line_end":17,"column_start":10,"column_end":25},"name":"EncryptionError","qualname":"::dem::EncryptionError","value":"pub enum EncryptionError { PlaintextTooLarge, }","parent":null,"children":[{"krate":0,"index":1576}],"decl_id":null,"docs":" Errors that can happen during symmetric encryption.\n","sig":null,"attributes":[{"value":"/ Errors that can happen during symmetric encryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":42593,"byte_end":42648,"line_start":15,"line_end":15,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43234,"byte_end":43252,"line_start":34,"line_end":34,"column_start":5,"column_end":23},"name":"CiphertextTooShort","qualname":"::dem::DecryptionError::CiphertextTooShort","value":"DecryptionError::CiphertextTooShort","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":" Ciphertext (which should be prepended by the nonce) is shorter than the nonce length.\n","sig":null,"attributes":[{"value":"/ Ciphertext (which should be prepended by the nonce) is shorter than the nonce length.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43140,"byte_end":43229,"line_start":33,"line_end":33,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43521,"byte_end":43541,"line_start":40,"line_end":40,"column_start":5,"column_end":25},"name":"AuthenticationFailed","qualname":"::dem::DecryptionError::AuthenticationFailed","value":"DecryptionError::AuthenticationFailed","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":" The ciphertext and the attached authentication data are inconsistent.\n This can happen if:\n - an incorrect key is used,\n - the ciphertext is modified or cut short,\n - an incorrect authentication data is provided on decryption.\n","sig":null,"attributes":[{"value":"/ The ciphertext and the attached authentication data are inconsistent.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43258,"byte_end":43331,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ This can happen if:","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43336,"byte_end":43359,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/ - an incorrect key is used,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43364,"byte_end":43395,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/ - the ciphertext is modified or cut short,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43400,"byte_end":43446,"line_start":38,"line_end":38,"column_start":5,"column_end":51}},{"value":"/ - an incorrect authentication data is provided on decryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43451,"byte_end":43516,"line_start":39,"line_end":39,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43118,"byte_end":43133,"line_start":32,"line_end":32,"column_start":10,"column_end":25},"name":"DecryptionError","qualname":"::dem::DecryptionError","value":"pub enum DecryptionError { CiphertextTooShort, AuthenticationFailed, }","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1586}],"decl_id":null,"docs":" Errors that can happend during symmetric decryption.\n","sig":null,"attributes":[{"value":"/ Errors that can happend during symmetric decryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43024,"byte_end":43080,"line_start":30,"line_end":30,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":58517,"byte_end":58524,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"KeyFrag","qualname":"::key_frag::KeyFrag","value":"KeyFrag {  }","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624}],"decl_id":null,"docs":" A fragment of the encrypting party's key used to create a [`CapsuleFrag`](`crate::CapsuleFrag`).\n","sig":null,"attributes":[{"value":"/ A fragment of the encrypting party's key used to create a [`CapsuleFrag`](`crate::CapsuleFrag`).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":58370,"byte_end":58470,"line_start":166,"line_end":166,"column_start":1,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60671,"byte_end":60690,"line_start":245,"line_end":245,"column_start":5,"column_end":24},"name":"IncorrectCommitment","qualname":"::key_frag::KeyFragVerificationError::IncorrectCommitment","value":"KeyFragVerificationError::IncorrectCommitment","parent":{"krate":0,"index":1633},"children":[],"decl_id":null,"docs":" Inconsistent internal state leading to commitment verification failure.\n","sig":null,"attributes":[{"value":"/ Inconsistent internal state leading to commitment verification failure.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60591,"byte_end":60666,"line_start":244,"line_end":244,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60845,"byte_end":60869,"line_start":248,"line_end":248,"column_start":5,"column_end":29},"name":"DelegatingKeyNotProvided","qualname":"::key_frag::KeyFragVerificationError::DelegatingKeyNotProvided","value":"KeyFragVerificationError::DelegatingKeyNotProvided","parent":{"krate":0,"index":1633},"children":[],"decl_id":null,"docs":" A delegating key was included in the signature when [`KeyFrag`] was created,\n but no delegating key was provided during verification.\n","sig":null,"attributes":[{"value":"/ A delegating key was included in the signature when [`KeyFrag`] was created,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60696,"byte_end":60776,"line_start":246,"line_end":246,"column_start":5,"column_end":85}},{"value":"/ but no delegating key was provided during verification.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60781,"byte_end":60840,"line_start":247,"line_end":247,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61022,"byte_end":61045,"line_start":251,"line_end":251,"column_start":5,"column_end":28},"name":"ReceivingKeyNotProvided","qualname":"::key_frag::KeyFragVerificationError::ReceivingKeyNotProvided","value":"KeyFragVerificationError::ReceivingKeyNotProvided","parent":{"krate":0,"index":1633},"children":[],"decl_id":null,"docs":" A receiving key was included in the signature when [`KeyFrag`] was created,\n but no receiving key was provided during verification.\n","sig":null,"attributes":[{"value":"/ A receiving key was included in the signature when [`KeyFrag`] was created,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60875,"byte_end":60954,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/ but no receiving key was provided during verification.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60959,"byte_end":61017,"line_start":250,"line_end":250,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61130,"byte_end":61148,"line_start":253,"line_end":253,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::key_frag::KeyFragVerificationError::IncorrectSignature","value":"KeyFragVerificationError::IncorrectSignature","parent":{"krate":0,"index":1633},"children":[],"decl_id":null,"docs":" Inconsistent internal state leading to signature verification failure.\n","sig":null,"attributes":[{"value":"/ Inconsistent internal state leading to signature verification failure.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61051,"byte_end":61125,"line_start":252,"line_end":252,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60560,"byte_end":60584,"line_start":243,"line_end":243,"column_start":10,"column_end":34},"name":"KeyFragVerificationError","qualname":"::key_frag::KeyFragVerificationError","value":"pub enum KeyFragVerificationError {\n    IncorrectCommitment,\n    DelegatingKeyNotProvided,\n    ReceivingKeyNotProvided,\n    IncorrectSignature,\n}","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640}],"decl_id":null,"docs":" Possible errors that can be returned by [`KeyFrag::verify`].\n","sig":null,"attributes":[{"value":"/ Possible errors that can be returned by [`KeyFrag::verify`].","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60458,"byte_end":60522,"line_start":241,"line_end":241,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63425,"byte_end":63431,"line_start":315,"line_end":315,"column_start":12,"column_end":18},"name":"verify","qualname":"<KeyFrag>::verify","value":"pub fn verify(Self, &PublicKey, Option<&PublicKey>, Option<&PublicKey>)\n-> Result<VerifiedKeyFrag, (KeyFragVerificationError, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Verifies the integrity of the key fragment, given the signing key,\n and (optionally) the encrypting party's and decrypting party's keys.","sig":null,"attributes":[{"value":"/ Verifies the integrity of the key fragment, given the signing key,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63043,"byte_end":63113,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ and (optionally) the encrypting party's and decrypting party's keys.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63118,"byte_end":63190,"line_start":310,"line_end":310,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63195,"byte_end":63198,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If [`generate_kfrags()`](`crate::generate_kfrags()`) was called with `true`","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63203,"byte_end":63282,"line_start":312,"line_end":312,"column_start":5,"column_end":84}},{"value":"/ for `sign_delegating_key` or `sign_receiving_key`, and the respective key","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63287,"byte_end":63364,"line_start":313,"line_end":313,"column_start":5,"column_end":82}},{"value":"/ is not provided, the verification fails.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":63369,"byte_end":63413,"line_start":314,"line_end":314,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65226,"byte_end":65243,"line_start":366,"line_end":366,"column_start":12,"column_end":29},"name":"skip_verification","qualname":"<KeyFrag>::skip_verification","value":"pub fn skip_verification(Self) -> VerifiedKeyFrag","parent":null,"children":[],"decl_id":null,"docs":" Explicitly skips verification.\n Useful in cases when the verifying keys are impossible to obtain independently.","sig":null,"attributes":[{"value":"/ Explicitly skips verification.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":64990,"byte_end":65024,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/ Useful in cases when the verifying keys are impossible to obtain independently.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65029,"byte_end":65112,"line_start":363,"line_end":363,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65117,"byte_end":65120,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ **Warning:** make sure you considered the implications of not enforcing verification.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65125,"byte_end":65214,"line_start":365,"line_end":365,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65635,"byte_end":65650,"line_start":376,"line_end":376,"column_start":12,"column_end":27},"name":"VerifiedKeyFrag","qualname":"::key_frag::VerifiedKeyFrag","value":"VerifiedKeyFrag {  }","parent":null,"children":[{"krate":0,"index":1648}],"decl_id":null,"docs":" Verified key fragment, good for reencryption.\n Can be serialized, but cannot be deserialized directly.\n It can only be obtained from [`KeyFrag::verify`] or [`KeyFrag::skip_verification`].\n","sig":null,"attributes":[{"value":"/ Verified key fragment, good for reencryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65320,"byte_end":65369,"line_start":371,"line_end":371,"column_start":1,"column_end":50}},{"value":"/ Can be serialized, but cannot be deserialized directly.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65370,"byte_end":65429,"line_start":372,"line_end":372,"column_start":1,"column_end":60}},{"value":"/ It can only be obtained from [`KeyFrag::verify`] or [`KeyFrag::skip_verification`].","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65430,"byte_end":65517,"line_start":373,"line_end":373,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66754,"byte_end":66773,"line_start":419,"line_end":419,"column_start":12,"column_end":31},"name":"from_verified_bytes","qualname":"<VerifiedKeyFrag>::from_verified_bytes","value":"pub fn from_verified_bytes<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Result<Self, DeserializationError>","parent":null,"children":[],"decl_id":null,"docs":" Restores a verified keyfrag directly from serialized bytes,\n skipping [`KeyFrag::verify`] call.","sig":null,"attributes":[{"value":"/ Restores a verified keyfrag directly from serialized bytes,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66528,"byte_end":66591,"line_start":414,"line_end":414,"column_start":5,"column_end":68}},{"value":"/ skipping [`KeyFrag::verify`] call.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66596,"byte_end":66634,"line_start":415,"line_end":415,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66639,"byte_end":66642,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Intended for internal storage;","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66647,"byte_end":66681,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/ make sure that the bytes come from a trusted source.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66686,"byte_end":66742,"line_start":418,"line_end":418,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":67171,"byte_end":67179,"line_start":427,"line_end":427,"column_start":12,"column_end":20},"name":"unverify","qualname":"<VerifiedKeyFrag>::unverify","value":"pub fn unverify(Self) -> KeyFrag","parent":null,"children":[],"decl_id":null,"docs":" Clears the verification status from the keyfrag.\n Useful for the cases where it needs to be put in the protocol structure\n containing [`KeyFrag`] types (since those are the ones\n that can be serialized/deserialized freely).\n","sig":null,"attributes":[{"value":"/ Clears the verification status from the keyfrag.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66911,"byte_end":66963,"line_start":423,"line_end":423,"column_start":5,"column_end":57}},{"value":"/ Useful for the cases where it needs to be put in the protocol structure","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66968,"byte_end":67043,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ containing [`KeyFrag`] types (since those are the ones","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":67048,"byte_end":67106,"line_start":425,"line_end":425,"column_start":5,"column_end":63}},{"value":"/ that can be serialized/deserialized freely).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":67111,"byte_end":67159,"line_start":426,"line_end":426,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":74972,"byte_end":74981,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"Signature","qualname":"::keys::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" ECDSA signature object.\n","sig":null,"attributes":[{"value":"/ ECDSA signature object.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":74898,"byte_end":74925,"line_start":31,"line_end":31,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76516,"byte_end":76522,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"verify","qualname":"<Signature>::verify","value":"pub fn verify(&Self, &PublicKey, &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verifies that the given message was signed with the secret counterpart of the given key.\n The message is hashed internally.\n","sig":null,"attributes":[{"value":"/ Verifies that the given message was signed with the secret counterpart of the given key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76370,"byte_end":76462,"line_start":78,"line_end":78,"column_start":5,"column_end":97}},{"value":"/ The message is hashed internally.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76467,"byte_end":76504,"line_start":79,"line_end":79,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77149,"byte_end":77158,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::keys::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A secret key.\n","sig":null,"attributes":[{"value":"/ A secret key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77103,"byte_end":77120,"line_start":100,"line_end":100,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77346,"byte_end":77361,"line_start":110,"line_end":110,"column_start":12,"column_end":27},"name":"random_with_rng","qualname":"<SecretKey>::random_with_rng","value":"pub fn random_with_rng<impl CryptoRng + RngCore: CryptoRng +\n                       RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a secret key using the given RNG.\n","sig":null,"attributes":[{"value":"/ Creates a secret key using the given RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77289,"byte_end":77334,"line_start":109,"line_end":109,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77630,"byte_end":77636,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKey>::random","value":"pub fn random() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a secret key using the default RNG.\n","sig":null,"attributes":[{"value":"/ Creates a secret key using the default RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77476,"byte_end":77523,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"cfg(feature = \"default-rng\")","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77528,"byte_end":77559,"line_start":115,"line_end":115,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77772,"byte_end":77782,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"public_key","qualname":"<SecretKey>::public_key","value":"pub fn public_key(&Self) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns a public key corresponding to this secret key.\n","sig":null,"attributes":[{"value":"/ Returns a public key corresponding to this secret key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77702,"byte_end":77760,"line_start":121,"line_end":121,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79557,"byte_end":79563,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"Signer","qualname":"::keys::Signer","value":"","parent":null,"children":[],"decl_id":null,"docs":" An object used to sign messages.\n For security reasons cannot be serialized.\n","sig":null,"attributes":[{"value":"/ An object used to sign messages.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79382,"byte_end":79418,"line_start":174,"line_end":174,"column_start":1,"column_end":37}},{"value":"/ For security reasons cannot be serialized.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79419,"byte_end":79465,"line_start":175,"line_end":175,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79664,"byte_end":79667,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<Signer>::new","value":"pub fn new(SecretKey) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new signer out of a secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new signer out of a secret key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79607,"byte_end":79652,"line_start":181,"line_end":181,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79814,"byte_end":79827,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"sign_with_rng","qualname":"<Signer>::sign_with_rng","value":"pub fn sign_with_rng<impl CryptoRng + RngCore: CryptoRng +\n                     RngCore>(&Self, &mut impl CryptoRng + RngCore, &[u8])\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Signs the given message using the given RNG.\n","sig":null,"attributes":[{"value":"/ Signs the given message using the given RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79754,"byte_end":79802,"line_start":186,"line_end":186,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80182,"byte_end":80186,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"sign","qualname":"<Signer>::sign","value":"pub fn sign(&Self, &[u8]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Signs the given message using the default RNG.\n","sig":null,"attributes":[{"value":"/ Signs the given message using the default RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80025,"byte_end":80075,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"default-rng\")","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80080,"byte_end":80111,"line_start":193,"line_end":193,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80389,"byte_end":80402,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<Signer>::verifying_key","value":"pub fn verifying_key(&Self) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the public key that can be used to verify the signatures produced by this signer.\n","sig":null,"attributes":[{"value":"/ Returns the public key that can be used to verify the signatures produced by this signer.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80284,"byte_end":80377,"line_start":199,"line_end":199,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80827,"byte_end":80836,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::keys::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A public key.","sig":null,"attributes":[{"value":"/ A public key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80709,"byte_end":80726,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80727,"byte_end":80730,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Create using [`SecretKey::public_key`].","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80731,"byte_end":80774,"line_start":219,"line_end":219,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83257,"byte_end":83273,"line_start":300,"line_end":300,"column_start":12,"column_end":28},"name":"SecretKeyFactory","qualname":"::keys::SecretKeyFactory","value":"","parent":null,"children":[],"decl_id":null,"docs":" This class handles keyring material for Umbral, by allowing deterministic\n derivation of `SecretKey` objects based on labels.\n","sig":null,"attributes":[{"value":"/ This class handles keyring material for Umbral, by allowing deterministic","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83096,"byte_end":83173,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ derivation of `SecretKey` objects based on labels.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83174,"byte_end":83228,"line_start":298,"line_end":298,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83402,"byte_end":83417,"line_start":304,"line_end":304,"column_start":12,"column_end":27},"name":"random_with_rng","qualname":"<SecretKeyFactory>::random_with_rng","value":"pub fn random_with_rng<impl CryptoRng + RngCore: CryptoRng +\n                       RngCore>(&mut impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a secret key factory using the given RNG.\n","sig":null,"attributes":[{"value":"/ Creates a secret key factory using the given RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83337,"byte_end":83390,"line_start":303,"line_end":303,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83803,"byte_end":83809,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"name":"random","qualname":"<SecretKeyFactory>::random","value":"pub fn random() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a secret key factory using the default RNG.\n","sig":null,"attributes":[{"value":"/ Creates a secret key factory using the default RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83641,"byte_end":83696,"line_start":310,"line_end":310,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"default-rng\")","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83701,"byte_end":83732,"line_start":311,"line_end":311,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84004,"byte_end":84013,"line_start":319,"line_end":319,"column_start":12,"column_end":21},"name":"seed_size","qualname":"<SecretKeyFactory>::seed_size","value":"pub fn seed_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the seed size required by\n [`from_secure_randomness`](`SecretKeyFactory::from_secure_randomness`).\n","sig":null,"attributes":[{"value":"/ Returns the seed size required by","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83875,"byte_end":83912,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ [`from_secure_randomness`](`SecretKeyFactory::from_secure_randomness`).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83917,"byte_end":83992,"line_start":318,"line_end":318,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84291,"byte_end":84313,"line_start":327,"line_end":327,"column_start":12,"column_end":34},"name":"from_secure_randomness","qualname":"<SecretKeyFactory>::from_secure_randomness","value":"pub fn from_secure_randomness(&[u8]) -> Result<Self, SizeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a secret key factory using the given random bytes.","sig":null,"attributes":[{"value":"/ Creates a secret key factory using the given random bytes.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84083,"byte_end":84145,"line_start":323,"line_end":323,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84150,"byte_end":84153,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ **Warning:** make sure the given seed has been obtained","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84158,"byte_end":84217,"line_start":325,"line_end":325,"column_start":5,"column_end":64}},{"value":"/ from a cryptographically secure source of randomness!","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84222,"byte_end":84279,"line_start":326,"line_end":326,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84868,"byte_end":84876,"line_start":341,"line_end":341,"column_start":12,"column_end":20},"name":"make_key","qualname":"<SecretKeyFactory>::make_key","value":"pub fn make_key(&Self, &[u8]) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SecretKey` deterministically from the given label.\n","sig":null,"attributes":[{"value":"/ Creates a `SecretKey` deterministically from the given label.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":84791,"byte_end":84856,"line_start":340,"line_end":340,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":85526,"byte_end":85538,"line_start":359,"line_end":359,"column_start":12,"column_end":24},"name":"make_factory","qualname":"<SecretKeyFactory>::make_factory","value":"pub fn make_factory(&Self, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SecretKeyFactory` deterministically from the given label.\n","sig":null,"attributes":[{"value":"/ Creates a `SecretKeyFactory` deterministically from the given label.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":85442,"byte_end":85514,"line_start":358,"line_end":358,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":90829,"byte_end":90835,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"OnOpen","qualname":"::pre::ReencryptionError::OnOpen","value":"ReencryptionError::OnOpen(OpenReencryptedError)","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" An error when opening a capsule. See [`OpenReencryptedError`] for the options.\n","sig":null,"attributes":[{"value":"/ An error when opening a capsule. See [`OpenReencryptedError`] for the options.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":90742,"byte_end":90824,"line_start":23,"line_end":23,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":90953,"byte_end":90965,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"OnDecryption","qualname":"::pre::ReencryptionError::OnDecryption","value":"ReencryptionError::OnDecryption(DecryptionError)","parent":{"krate":0,"index":1706},"children":[],"decl_id":null,"docs":" An error when decrypting the ciphertext. See [`DecryptionError`] for the options.\n","sig":null,"attributes":[{"value":"/ An error when decrypting the ciphertext. See [`DecryptionError`] for the options.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":90863,"byte_end":90948,"line_start":25,"line_end":25,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":90718,"byte_end":90735,"line_start":22,"line_end":22,"column_start":10,"column_end":27},"name":"ReencryptionError","qualname":"::pre::ReencryptionError","value":"pub enum ReencryptionError {\n    OnOpen(OpenReencryptedError),\n    OnDecryption(DecryptionError),\n}","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1710}],"decl_id":null,"docs":" Errors that can happen when decrypting a reencrypted ciphertext.\n","sig":null,"attributes":[{"value":"/ Errors that can happen when decrypting a reencrypted ciphertext.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":90612,"byte_end":90680,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91485,"byte_end":91501,"line_start":41,"line_end":41,"column_start":8,"column_end":24},"name":"encrypt_with_rng","qualname":"::pre::encrypt_with_rng","value":"pub fn encrypt_with_rng<impl CryptoRng + RngCore: CryptoRng +\n                        RngCore>(&mut impl CryptoRng + RngCore, &PublicKey,\n                                 &[u8])\n-> Result<(Capsule, Box<[u8]>), EncryptionError>","parent":null,"children":[],"decl_id":null,"docs":" Encrypts the given plaintext message using a DEM scheme,\n and encapsulates the key for later reencryption.\n Returns the KEM [`Capsule`] and the ciphertext.\n","sig":null,"attributes":[{"value":"/ Encrypts the given plaintext message using a DEM scheme,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91312,"byte_end":91372,"line_start":38,"line_end":38,"column_start":1,"column_end":61}},{"value":"/ and encapsulates the key for later reencryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91373,"byte_end":91425,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ Returns the KEM [`Capsule`] and the ciphertext.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91426,"byte_end":91477,"line_start":40,"line_end":40,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92013,"byte_end":92020,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::pre::encrypt","value":"pub fn encrypt(&PublicKey, &[u8])\n-> Result<(Capsule, Box<[u8]>), EncryptionError>","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`encrypt`] with the default RNG.\n","sig":null,"attributes":[{"value":"/ A synonym for [`encrypt`] with the default RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91867,"byte_end":91918,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"cfg(feature = \"default-rng\")","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91919,"byte_end":91950,"line_start":53,"line_end":53,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92269,"byte_end":92285,"line_start":63,"line_end":63,"column_start":8,"column_end":24},"name":"decrypt_original","qualname":"::pre::decrypt_original","value":"pub fn decrypt_original<impl AsRef<[u8]>: AsRef<[u8]>>(&SecretKey, &Capsule,\n                                                       impl AsRef<[u8]>)\n-> Result<Box<[u8]>, DecryptionError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to decrypt the ciphertext using the receiver's secret key.\n","sig":null,"attributes":[{"value":"/ Attempts to decrypt the ciphertext using the receiver's secret key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92190,"byte_end":92261,"line_start":62,"line_end":62,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93437,"byte_end":93461,"line_start":90,"line_end":90,"column_start":8,"column_end":32},"name":"generate_kfrags_with_rng","qualname":"::pre::generate_kfrags_with_rng","value":"pub fn generate_kfrags_with_rng<impl CryptoRng + RngCore: CryptoRng +\n                                RngCore>(&mut impl CryptoRng + RngCore,\n                                         &SecretKey, &PublicKey, &Signer,\n                                         usize, usize, bool, bool)\n-> Box<[VerifiedKeyFrag]>","parent":null,"children":[],"decl_id":null,"docs":" Creates `shares` fragments of `delegating_sk`,\n which will be possible to reencrypt to allow the creator of `receiving_pk`\n decrypt the ciphertext encrypted with `delegating_sk`.","sig":null,"attributes":[{"value":"/ Creates `shares` fragments of `delegating_sk`,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92561,"byte_end":92611,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ which will be possible to reencrypt to allow the creator of `receiving_pk`","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92612,"byte_end":92690,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ decrypt the ciphertext encrypted with `delegating_sk`.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92691,"byte_end":92749,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92750,"byte_end":92753,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ `threshold` sets the number of fragments necessary for decryption","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92754,"byte_end":92823,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/ (that is, fragments created with `threshold > num_frags` will be useless).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92824,"byte_end":92902,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92903,"byte_end":92906,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ `signer` is used to sign the resulting [`KeyFrag`](`crate::KeyFrag`) objects,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92907,"byte_end":92988,"line_start":80,"line_end":80,"column_start":1,"column_end":82}},{"value":"/ which can be later verified by the associated public key.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":92989,"byte_end":93050,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93051,"byte_end":93054,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ If `sign_delegating_key` or `sign_receiving_key` are `true`,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93055,"byte_end":93119,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/ the reencrypting party will be able to verify that a [`KeyFrag`](`crate::KeyFrag`)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93120,"byte_end":93206,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"/ corresponds to given delegating or receiving public keys","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93207,"byte_end":93267,"line_start":85,"line_end":85,"column_start":1,"column_end":61}},{"value":"/ by supplying them to [`KeyFrag::verify()`](`crate::KeyFrag::verify`).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93268,"byte_end":93341,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93342,"byte_end":93345,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Returns a boxed slice of `shares` KeyFrags","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93346,"byte_end":93392,"line_start":88,"line_end":88,"column_start":1,"column_end":47}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":93393,"byte_end":93429,"line_start":89,"line_end":89,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94284,"byte_end":94299,"line_start":119,"line_end":119,"column_start":8,"column_end":23},"name":"generate_kfrags","qualname":"::pre::generate_kfrags","value":"pub fn generate_kfrags(&SecretKey, &PublicKey, &Signer, usize, usize, bool,\n                       bool) -> Box<[VerifiedKeyFrag]>","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`generate_kfrags_with_rng`] with the default RNG.\n","sig":null,"attributes":[{"value":"/ A synonym for [`generate_kfrags_with_rng`] with the default RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94084,"byte_end":94152,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"default-rng\")","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94153,"byte_end":94184,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94240,"byte_end":94276,"line_start":118,"line_end":118,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95160,"byte_end":95178,"line_start":148,"line_end":148,"column_start":8,"column_end":26},"name":"reencrypt_with_rng","qualname":"::pre::reencrypt_with_rng","value":"pub fn reencrypt_with_rng<impl CryptoRng + RngCore: CryptoRng +\n                          RngCore>(&mut impl CryptoRng + RngCore, &Capsule,\n                                   VerifiedKeyFrag) -> VerifiedCapsuleFrag","parent":null,"children":[],"decl_id":null,"docs":" Reencrypts a [`Capsule`] object with a key fragment, creating a capsule fragment.","sig":null,"attributes":[{"value":"/ Reencrypts a [`Capsule`] object with a key fragment, creating a capsule fragment.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94727,"byte_end":94812,"line_start":140,"line_end":140,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94813,"byte_end":94816,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ Having `threshold` (see [`generate_kfrags()`](`crate::generate_kfrags()`))","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94817,"byte_end":94895,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ distinct fragments (along with the original capsule and the corresponding secret key)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94896,"byte_end":94985,"line_start":143,"line_end":143,"column_start":1,"column_end":90}},{"value":"/ allows one to decrypt the original plaintext.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":94986,"byte_end":95035,"line_start":144,"line_end":144,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95036,"byte_end":95039,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ One can call [`KeyFrag::verify()`](`crate::KeyFrag::verify`)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95040,"byte_end":95104,"line_start":146,"line_end":146,"column_start":1,"column_end":65}},{"value":"/ before reencryption to check its integrity.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95105,"byte_end":95152,"line_start":147,"line_end":147,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95547,"byte_end":95556,"line_start":159,"line_end":159,"column_start":8,"column_end":17},"name":"reencrypt","qualname":"::pre::reencrypt","value":"pub fn reencrypt(&Capsule, VerifiedKeyFrag) -> VerifiedCapsuleFrag","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`reencrypt_with_rng`] with the default RNG.\n","sig":null,"attributes":[{"value":"/ A synonym for [`reencrypt_with_rng`] with the default RNG.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95390,"byte_end":95452,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"cfg(feature = \"default-rng\")","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95453,"byte_end":95484,"line_start":157,"line_end":157,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":96155,"byte_end":96174,"line_start":173,"line_end":173,"column_start":8,"column_end":27},"name":"decrypt_reencrypted","qualname":"::pre::decrypt_reencrypted","value":"pub fn decrypt_reencrypted<impl IntoIterator<Item = VerifiedCapsuleFrag>: IntoIterator<Item\n                           = VerifiedCapsuleFrag>,\n                           impl AsRef<[u8]>: AsRef<[u8]>>(&SecretKey,\n                                                          &PublicKey,\n                                                          &Capsule,\n                                                          impl IntoIterator<Item = VerifiedCapsuleFrag>,\n                                                          impl AsRef<[u8]>)\n-> Result<Box<[u8]>, ReencryptionError>","parent":null,"children":[],"decl_id":null,"docs":" Decrypts the ciphertext using previously reencrypted capsule fragments.","sig":null,"attributes":[{"value":"/ Decrypts the ciphertext using previously reencrypted capsule fragments.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95697,"byte_end":95772,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95773,"byte_end":95776,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ `decrypting_sk` is the secret key whose associated public key was used in","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95777,"byte_end":95854,"line_start":165,"line_end":165,"column_start":1,"column_end":78}},{"value":"/ [`generate_kfrags()`](`crate::generate_kfrags()`).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95855,"byte_end":95909,"line_start":166,"line_end":166,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95910,"byte_end":95913,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ `delegating_pk` is the public key of the encrypting party.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95914,"byte_end":95976,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/ Used to check the validity of decryption.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":95977,"byte_end":96022,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":96023,"byte_end":96026,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ One can call [`CapsuleFrag::verify()`](`crate::CapsuleFrag::verify`)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":96027,"byte_end":96099,"line_start":171,"line_end":171,"column_start":1,"column_end":73}},{"value":"/ before reencryption to check its integrity.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":96100,"byte_end":96147,"line_start":172,"line_end":172,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102554,"byte_end":102573,"line_start":47,"line_end":47,"column_start":11,"column_end":30},"name":"CanBeZeroizedOnDrop","qualname":"::secret_box::CanBeZeroizedOnDrop","value":"CanBeZeroizedOnDrop","parent":null,"children":[{"krate":0,"index":1187}],"decl_id":null,"docs":" This is a helper trait for [`SecretBox`], asserting that the type implementing it\n can either be zeroized\n (in which case [`ensure_zeroized_on_drop`](`CanBeZeroizedOnDrop::ensure_zeroized_on_drop`)\n is implemented accordingly),\n or is zeroized on drop\n (in which case [`ensure_zeroized_on_drop`](`CanBeZeroizedOnDrop::ensure_zeroized_on_drop`)\n does nothing).\n In other words, with this trait we are sure that one way or the other,\n on drop of [`SecretBox`] the contents are zeroized.","sig":null,"attributes":[{"value":"/ This is a helper trait for [`SecretBox`], asserting that the type implementing it","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":101653,"byte_end":101738,"line_start":31,"line_end":31,"column_start":1,"column_end":86}},{"value":"/ can either be zeroized","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":101739,"byte_end":101765,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ (in which case [`ensure_zeroized_on_drop`](`CanBeZeroizedOnDrop::ensure_zeroized_on_drop`)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":101766,"byte_end":101860,"line_start":33,"line_end":33,"column_start":1,"column_end":95}},{"value":"/ is implemented accordingly),","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":101861,"byte_end":101893,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ or is zeroized on drop","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":101894,"byte_end":101920,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ (in which case [`ensure_zeroized_on_drop`](`CanBeZeroizedOnDrop::ensure_zeroized_on_drop`)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":101921,"byte_end":102015,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/ does nothing).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102016,"byte_end":102034,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ In other words, with this trait we are sure that one way or the other,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102035,"byte_end":102109,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ on drop of [`SecretBox`] the contents are zeroized.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102110,"byte_end":102165,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102166,"byte_end":102169,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Ideally these should be two traits, but without trait specialization feature","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102170,"byte_end":102250,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ we cannot have two `Drop` implementations depending on which trait the type has.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102251,"byte_end":102335,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102336,"byte_end":102339,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Additionally, it allows us to implement [`zeroize::Zeroize`]-like behavior","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102340,"byte_end":102418,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ for foreign types for which the original `Zeroize`","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102419,"byte_end":102473,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/ isn't implemented (for example, [`generic_array::GenericArray`]).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102474,"byte_end":102543,"line_start":46,"line_end":46,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102758,"byte_end":102781,"line_start":51,"line_end":51,"column_start":8,"column_end":31},"name":"ensure_zeroized_on_drop","qualname":"::secret_box::CanBeZeroizedOnDrop::ensure_zeroized_on_drop","value":"pub fn ensure_zeroized_on_drop(&mut Self)","parent":{"krate":0,"index":1186},"children":[],"decl_id":null,"docs":" This method will be called on drop.\n The implementor should zeroize the secret parts of the value if it does not do it itself,\n or do nothing otherwise.\n","sig":null,"attributes":[{"value":"/ This method will be called on drop.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102580,"byte_end":102619,"line_start":48,"line_end":48,"column_start":5,"column_end":44}},{"value":"/ The implementor should zeroize the secret parts of the value if it does not do it itself,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102624,"byte_end":102717,"line_start":49,"line_end":49,"column_start":5,"column_end":98}},{"value":"/ or do nothing otherwise.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102722,"byte_end":102750,"line_start":50,"line_end":50,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103289,"byte_end":103298,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"SecretBox","qualname":"::secret_box::SecretBox","value":"","parent":null,"children":[],"decl_id":null,"docs":" A container for secret data.\n Makes the usage of secret data explicit and easy to track,\n prevents the secret data from being put on stack,\n and zeroizes the contents on drop.\n","sig":null,"attributes":[{"value":"/ A container for secret data.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103000,"byte_end":103032,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ Makes the usage of secret data explicit and easy to track,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103033,"byte_end":103095,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/ prevents the secret data from being put on stack,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103096,"byte_end":103149,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ and zeroizes the contents on drop.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103150,"byte_end":103188,"line_start":67,"line_end":67,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103563,"byte_end":103572,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"as_secret","qualname":"<SecretBox<T>>::as_secret","value":"pub fn as_secret(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the secret data.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the secret data.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103497,"byte_end":103551,"line_start":81,"line_end":81,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103686,"byte_end":103699,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"as_mut_secret","qualname":"<SecretBox<T>>::as_mut_secret","value":"pub fn as_mut_secret(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the secret data.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the secret data.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103623,"byte_end":103674,"line_start":86,"line_end":86,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104305,"byte_end":104322,"line_start":15,"line_end":15,"column_start":12,"column_end":29},"name":"ConstructionError","qualname":"::traits::ConstructionError","value":"ConstructionError {  }","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728}],"decl_id":null,"docs":" Errors that can happen during deserializing an object from a bytestring of correct length.\n","sig":null,"attributes":[{"value":"/ Errors that can happen during deserializing an object from a bytestring of correct length.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104171,"byte_end":104265,"line_start":13,"line_end":13,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104588,"byte_end":104591,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<ConstructionError>::new","value":"pub fn new(&str, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ConstructionError`.\n","sig":null,"attributes":[{"value":"/ Creates a new `ConstructionError`.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104538,"byte_end":104576,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105085,"byte_end":105102,"line_start":45,"line_end":45,"column_start":12,"column_end":29},"name":"SizeMismatchError","qualname":"::traits::SizeMismatchError","value":"SizeMismatchError {  }","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":" The provided bytestring is of an incorrect size.\n","sig":null,"attributes":[{"value":"/ The provided bytestring is of an incorrect size.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104993,"byte_end":105045,"line_start":43,"line_end":43,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105239,"byte_end":105242,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<SizeMismatchError>::new","value":"pub fn new(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SizeMismatchError`.\n","sig":null,"attributes":[{"value":"/ Creates a new `SizeMismatchError`.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105189,"byte_end":105227,"line_start":51,"line_end":51,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105870,"byte_end":105889,"line_start":74,"line_end":74,"column_start":5,"column_end":24},"name":"ConstructionFailure","qualname":"::traits::DeserializationError::ConstructionFailure","value":"DeserializationError::ConstructionFailure(ConstructionError)","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Failed to construct the object from a given bytestring (with the correct length).\n","sig":null,"attributes":[{"value":"/ Failed to construct the object from a given bytestring (with the correct length).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105780,"byte_end":105865,"line_start":73,"line_end":73,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105969,"byte_end":105981,"line_start":76,"line_end":76,"column_start":5,"column_end":17},"name":"SizeMismatch","qualname":"::traits::DeserializationError::SizeMismatch","value":"DeserializationError::SizeMismatch(SizeMismatchError)","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" The given bytestring is too short or too long.\n","sig":null,"attributes":[{"value":"/ The given bytestring is too short or too long.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105914,"byte_end":105964,"line_start":75,"line_end":75,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105753,"byte_end":105773,"line_start":72,"line_end":72,"column_start":10,"column_end":30},"name":"DeserializationError","qualname":"::traits::DeserializationError","value":"pub enum DeserializationError {\n    ConstructionFailure(ConstructionError),\n    SizeMismatch(SizeMismatchError),\n}","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1748}],"decl_id":null,"docs":" Errors that can happen during object deserialization.\n","sig":null,"attributes":[{"value":"/ Errors that can happen during object deserialization.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105658,"byte_end":105715,"line_start":70,"line_end":70,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106406,"byte_end":106426,"line_start":90,"line_end":90,"column_start":11,"column_end":31},"name":"RepresentableAsArray","qualname":"::traits::RepresentableAsArray","value":"RepresentableAsArray: Sized","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":" A trait denoting that the object can be represented as an array of bytes\n with size known at compile time.\n","sig":null,"attributes":[{"value":"/ A trait denoting that the object can be represented as an array of bytes","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106282,"byte_end":106358,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ with size known at compile time.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106359,"byte_end":106395,"line_start":89,"line_end":89,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106477,"byte_end":106481,"line_start":92,"line_end":92,"column_start":10,"column_end":14},"name":"Size","qualname":"::traits::RepresentableAsArray::Size","value":"type Size: ArrayLength<u8>;","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":" Resulting array length.\n","sig":null,"attributes":[{"value":"/ Resulting array length.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106440,"byte_end":106467,"line_start":91,"line_end":91,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106723,"byte_end":106738,"line_start":99,"line_end":99,"column_start":8,"column_end":23},"name":"serialized_size","qualname":"::traits::RepresentableAsArray::serialized_size","value":"pub fn serialized_size() -> usize","parent":{"krate":0,"index":1252},"children":[],"decl_id":null,"docs":" Resulting array length exposed as a runtime method.\n","sig":null,"attributes":[{"value":"/ Resulting array length exposed as a runtime method.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106660,"byte_end":106715,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106915,"byte_end":106934,"line_start":106,"line_end":106,"column_start":11,"column_end":30},"name":"SerializableToArray","qualname":"::traits::SerializableToArray","value":"SerializableToArray: RepresentableAsArray","parent":null,"children":[{"krate":0,"index":1256}],"decl_id":null,"docs":" A trait denoting that the object can be serialized to an array of bytes\n with size known at compile time.\n","sig":null,"attributes":[{"value":"/ A trait denoting that the object can be serialized to an array of bytes","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106792,"byte_end":106867,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ with size known at compile time.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106868,"byte_end":106904,"line_start":105,"line_end":105,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107024,"byte_end":107032,"line_start":108,"line_end":108,"column_start":8,"column_end":16},"name":"to_array","qualname":"::traits::SerializableToArray::to_array","value":"pub fn to_array(&Self) -> GenericArray<u8, Self::Size>","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" Produces a byte array with the object's contents.\n","sig":null,"attributes":[{"value":"/ Produces a byte array with the object's contents.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106963,"byte_end":107016,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107190,"byte_end":107215,"line_start":113,"line_end":113,"column_start":11,"column_end":36},"name":"SerializableToSecretArray","qualname":"::traits::SerializableToSecretArray","value":"SerializableToSecretArray: RepresentableAsArray","parent":null,"children":[{"krate":0,"index":1258}],"decl_id":null,"docs":" A trait denoting that the object can be serialized to an array of bytes\n containing secret data.\n","sig":null,"attributes":[{"value":"/ A trait denoting that the object can be serialized to an array of bytes","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107076,"byte_end":107151,"line_start":111,"line_end":111,"column_start":1,"column_end":76}},{"value":"/ containing secret data.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107152,"byte_end":107179,"line_start":112,"line_end":112,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107336,"byte_end":107351,"line_start":115,"line_end":115,"column_start":8,"column_end":23},"name":"to_secret_array","qualname":"::traits::SerializableToSecretArray::to_secret_array","value":"pub fn to_secret_array(&Self) -> SecretBox<GenericArray<u8, Self::Size>>","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":" Produces a byte array with the object's contents, wrapped in a secret container.\n","sig":null,"attributes":[{"value":"/ Produces a byte array with the object's contents, wrapped in a secret container.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107244,"byte_end":107328,"line_start":114,"line_end":114,"column_start":5,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107533,"byte_end":107556,"line_start":120,"line_end":120,"column_start":11,"column_end":34},"name":"DeserializableFromArray","qualname":"::traits::DeserializableFromArray","value":"DeserializableFromArray: RepresentableAsArray","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1266}],"decl_id":null,"docs":" A trait denoting that the object can be deserialized from an array of bytes\n with size known at compile time.\n","sig":null,"attributes":[{"value":"/ A trait denoting that the object can be deserialized from an array of bytes","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107406,"byte_end":107485,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ with size known at compile time.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107486,"byte_end":107522,"line_start":119,"line_end":119,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107658,"byte_end":107668,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"from_array","qualname":"::traits::DeserializableFromArray::from_array","value":"pub fn from_array(&GenericArray<u8, Self::Size>)\n-> Result<Self, ConstructionError>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Attempts to produce the object back from the serialized form.\n","sig":null,"attributes":[{"value":"/ Attempts to produce the object back from the serialized form.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107585,"byte_end":107650,"line_start":121,"line_end":121,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107875,"byte_end":107885,"line_start":126,"line_end":126,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::traits::DeserializableFromArray::from_bytes","value":"pub fn from_bytes<impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<[u8]>)\n-> Result<Self, DeserializationError>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Attempts to produce the object back from a dynamically sized byte array,\n checking that its length is correct.\n","sig":null,"attributes":[{"value":"/ Attempts to produce the object back from a dynamically sized byte array,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107746,"byte_end":107822,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ checking that its length is correct.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107827,"byte_end":107867,"line_start":125,"line_end":125,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108920,"byte_end":108924,"line_start":148,"line_end":148,"column_start":8,"column_end":12},"name":"take","qualname":"::traits::DeserializableFromArray::take","value":"pub fn take<U>(GenericArray<u8, U>)\n-> Result<(Self, GenericArray<u8, Diff<U, Self::Size>>), ConstructionError>\nwhere U: ArrayLength<u8> + Sub<Self::Size>,\nDiff<U, Self::Size>: ArrayLength<u8>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Used to implement [`from_array()`](`Self::from_array()`) for structs whose fields\n implement [`SerializableToArray`].","sig":null,"attributes":[{"value":"/ Used to implement [`from_array()`](`Self::from_array()`) for structs whose fields","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108544,"byte_end":108629,"line_start":141,"line_end":141,"column_start":5,"column_end":90}},{"value":"/ implement [`SerializableToArray`].","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108634,"byte_end":108672,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108677,"byte_end":108680,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Attempts to split off enough bytes from `arr` to call","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108685,"byte_end":108742,"line_start":144,"line_end":144,"column_start":5,"column_end":62}},{"value":"/ [`from_array()`](`Self::from_array()`),","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108747,"byte_end":108790,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"/ and if it succeeds, returns the resulting object and the rest of the array.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108795,"byte_end":108874,"line_start":146,"line_end":146,"column_start":5,"column_end":84}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":108879,"byte_end":108912,"line_start":147,"line_end":147,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":109508,"byte_end":109517,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"take_last","qualname":"::traits::DeserializableFromArray::take_last","value":"pub fn take_last(GenericArray<u8, Self::Size>)\n-> Result<Self, ConstructionError>","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" A variant of [`take()`](`Self::take()`) to be called for the last field of the struct,\n where no remainder of the array is expected.\n","sig":null,"attributes":[{"value":"/ A variant of [`take()`](`Self::take()`) to be called for the last field of the struct,","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":109357,"byte_end":109447,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ where no remainder of the array is expected.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":109452,"byte_end":109500,"line_start":161,"line_end":161,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":110367,"byte_end":110378,"line_start":192,"line_end":192,"column_start":11,"column_end":22},"name":"HasTypeName","qualname":"::traits::HasTypeName","value":"HasTypeName","parent":null,"children":[{"krate":0,"index":1274}],"decl_id":null,"docs":" A reflection trait providing access to the type's name.\n","sig":null,"attributes":[{"value":"/ A reflection trait providing access to the type's name.","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":110297,"byte_end":110356,"line_start":191,"line_end":191,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":110484,"byte_end":110493,"line_start":195,"line_end":195,"column_start":8,"column_end":17},"name":"type_name","qualname":"::traits::HasTypeName::type_name","value":"pub fn type_name() -> &'static str","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" Returns a string with the name of the type\n (intended for displaying to humans).\n","sig":null,"attributes":[{"value":"/ Returns a string with the name of the type","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":110385,"byte_end":110431,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/ (intended for displaying to humans).","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":110436,"byte_end":110476,"line_start":194,"line_end":194,"column_start":5,"column_end":45}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7614,"byte_end":7634,"line_start":42,"line_end":42,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8518,"byte_end":8525,"line_start":65,"line_end":65,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8617,"byte_end":8624,"line_start":69,"line_end":69,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8863,"byte_end":8870,"line_start":78,"line_end":78,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":9394,"byte_end":9401,"line_start":90,"line_end":90,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":9709,"byte_end":9716,"line_start":101,"line_end":101,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":9924,"byte_end":9931,"line_start":110,"line_end":110,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":10020,"byte_end":10027,"line_start":116,"line_end":116,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":10232,"byte_end":10239,"line_start":124,"line_end":124,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":19758,"byte_end":19774,"line_start":41,"line_end":41,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":19847,"byte_end":19863,"line_start":45,"line_end":45,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":20258,"byte_end":20274,"line_start":57,"line_end":57,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":20910,"byte_end":20926,"line_start":76,"line_end":76,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22429,"byte_end":22440,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22567,"byte_end":22578,"line_start":136,"line_end":136,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22908,"byte_end":22919,"line_start":147,"line_end":147,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":23549,"byte_end":23560,"line_start":166,"line_end":166,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":23868,"byte_end":23879,"line_start":177,"line_end":177,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24087,"byte_end":24098,"line_start":186,"line_end":186,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24191,"byte_end":24202,"line_start":192,"line_end":192,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24705,"byte_end":24733,"line_start":207,"line_end":207,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":25024,"byte_end":25035,"line_start":216,"line_end":216,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28603,"byte_end":28622,"line_start":323,"line_end":323,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28718,"byte_end":28737,"line_start":327,"line_end":327,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28857,"byte_end":28876,"line_start":333,"line_end":333,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28977,"byte_end":28996,"line_start":339,"line_end":339,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29112,"byte_end":29131,"line_start":345,"line_end":345,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":33984,"byte_end":34004,"line_start":35,"line_end":35,"column_start":30,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34630,"byte_end":34641,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34840,"byte_end":34851,"line_start":62,"line_end":62,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34885,"byte_end":34896,"line_start":64,"line_end":64,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35005,"byte_end":35016,"line_start":70,"line_end":70,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35216,"byte_end":35227,"line_start":76,"line_end":76,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35355,"byte_end":35366,"line_start":82,"line_end":82,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35754,"byte_end":35765,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35943,"byte_end":35961,"line_start":101,"line_end":101,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":36047,"byte_end":36065,"line_start":107,"line_end":107,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37386,"byte_end":37397,"line_start":141,"line_end":141,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37525,"byte_end":37536,"line_start":147,"line_end":147,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37839,"byte_end":37849,"line_start":159,"line_end":159,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":39264,"byte_end":39274,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":39369,"byte_end":39379,"line_start":207,"line_end":207,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":39413,"byte_end":39423,"line_start":209,"line_end":209,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":41648,"byte_end":41658,"line_start":303,"line_end":303,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":41730,"byte_end":41740,"line_start":307,"line_end":307,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":41877,"byte_end":41887,"line_start":313,"line_end":313,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":42143,"byte_end":42153,"line_start":320,"line_end":320,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":42816,"byte_end":42831,"line_start":22,"line_end":22,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43568,"byte_end":43583,"line_start":43,"line_end":43,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":44666,"byte_end":44683,"line_start":76,"line_end":76,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":44930,"byte_end":44933,"line_start":87,"line_end":87,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/hashing.rs","byte_start":48262,"byte_end":48266,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/hashing.rs","byte_start":48995,"byte_end":49007,"line_start":43,"line_end":43,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54461,"byte_end":54470,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54677,"byte_end":54686,"line_start":41,"line_end":41,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54784,"byte_end":54793,"line_start":47,"line_end":47,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54859,"byte_end":54868,"line_start":51,"line_end":51,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54985,"byte_end":54994,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":55748,"byte_end":55760,"line_start":78,"line_end":78,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":55829,"byte_end":55841,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":56225,"byte_end":56237,"line_start":93,"line_end":93,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":56979,"byte_end":56991,"line_start":118,"line_end":118,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":58721,"byte_end":58728,"line_start":176,"line_end":176,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":58840,"byte_end":58847,"line_start":180,"line_end":180,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":59120,"byte_end":59127,"line_start":190,"line_end":190,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":59714,"byte_end":59721,"line_start":209,"line_end":209,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60029,"byte_end":60036,"line_start":220,"line_end":220,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60244,"byte_end":60251,"line_start":229,"line_end":229,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60340,"byte_end":60347,"line_start":235,"line_end":235,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61175,"byte_end":61199,"line_start":256,"line_end":256,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61774,"byte_end":61781,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65706,"byte_end":65721,"line_start":380,"line_end":380,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65813,"byte_end":65828,"line_start":384,"line_end":384,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65948,"byte_end":65963,"line_start":390,"line_end":390,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66060,"byte_end":66075,"line_start":396,"line_end":396,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66191,"byte_end":66206,"line_start":402,"line_end":402,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":67491,"byte_end":67502,"line_start":442,"line_end":442,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75043,"byte_end":75052,"line_start":35,"line_end":35,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75129,"byte_end":75138,"line_start":39,"line_end":39,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75311,"byte_end":75320,"line_start":45,"line_end":45,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75836,"byte_end":75845,"line_start":57,"line_end":57,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76153,"byte_end":76162,"line_start":68,"line_end":68,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76354,"byte_end":76363,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76682,"byte_end":76691,"line_start":85,"line_end":85,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76782,"byte_end":76791,"line_start":91,"line_end":91,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77195,"byte_end":77204,"line_start":104,"line_end":104,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":78459,"byte_end":78468,"line_start":140,"line_end":140,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":78570,"byte_end":78579,"line_start":144,"line_end":144,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":78744,"byte_end":78753,"line_start":150,"line_end":150,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79062,"byte_end":79071,"line_start":158,"line_end":158,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79162,"byte_end":79171,"line_start":164,"line_end":164,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79594,"byte_end":79600,"line_start":180,"line_end":180,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80504,"byte_end":80510,"line_start":205,"line_end":205,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80598,"byte_end":80604,"line_start":211,"line_end":211,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80873,"byte_end":80882,"line_start":223,"line_end":223,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":81393,"byte_end":81402,"line_start":240,"line_end":240,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":81497,"byte_end":81506,"line_start":244,"line_end":244,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":81643,"byte_end":81652,"line_start":250,"line_end":250,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82096,"byte_end":82105,"line_start":261,"line_end":261,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82410,"byte_end":82419,"line_start":272,"line_end":272,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82624,"byte_end":82633,"line_start":281,"line_end":281,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82724,"byte_end":82733,"line_start":287,"line_end":287,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83314,"byte_end":83330,"line_start":302,"line_end":302,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":85946,"byte_end":85962,"line_start":372,"line_end":372,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86045,"byte_end":86061,"line_start":376,"line_end":376,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86204,"byte_end":86220,"line_start":382,"line_end":382,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86383,"byte_end":86399,"line_start":388,"line_end":388,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86497,"byte_end":86513,"line_start":394,"line_end":394,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/params.rs","byte_start":89332,"byte_end":89342,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91009,"byte_end":91026,"line_start":29,"line_end":29,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102832,"byte_end":102844,"line_start":54,"line_end":54,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103361,"byte_end":103370,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103773,"byte_end":103782,"line_start":92,"line_end":92,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104514,"byte_end":104531,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104768,"byte_end":104785,"line_start":33,"line_end":33,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105165,"byte_end":105182,"line_start":50,"line_end":50,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105407,"byte_end":105424,"line_start":60,"line_end":60,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106027,"byte_end":106047,"line_start":79,"line_end":79,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","byte_start":116734,"byte_end":116744,"line_start":45,"line_end":45,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","byte_start":117262,"byte_end":117272,"line_start":66,"line_end":66,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","byte_start":117789,"byte_end":117801,"line_start":87,"line_end":87,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":7614,"byte_end":7634,"line_start":42,"line_end":42,"column_start":23,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1464},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8518,"byte_end":8525,"line_start":65,"line_end":65,"column_start":31,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8617,"byte_end":8624,"line_start":69,"line_end":69,"column_start":30,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":8863,"byte_end":8870,"line_start":78,"line_end":78,"column_start":34,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":9394,"byte_end":9401,"line_start":90,"line_end":90,"column_start":20,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1478},"to":{"krate":11,"index":2100}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":9709,"byte_end":9716,"line_start":101,"line_end":101,"column_start":32,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1478},"to":{"krate":11,"index":1559}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":9924,"byte_end":9931,"line_start":110,"line_end":110,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":10020,"byte_end":10027,"line_start":116,"line_end":116,"column_start":23,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1478},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule.rs","byte_start":10232,"byte_end":10239,"line_start":124,"line_end":124,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":19758,"byte_end":19774,"line_start":41,"line_end":41,"column_start":31,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1492},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":19847,"byte_end":19863,"line_start":45,"line_end":45,"column_start":30,"column_end":46},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1492},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":20258,"byte_end":20274,"line_start":57,"line_end":57,"column_start":34,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1492},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":20910,"byte_end":20926,"line_start":76,"line_end":76,"column_start":6,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22429,"byte_end":22440,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22567,"byte_end":22578,"line_start":136,"line_end":136,"column_start":30,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":22908,"byte_end":22919,"line_start":147,"line_end":147,"column_start":34,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":23549,"byte_end":23560,"line_start":166,"line_end":166,"column_start":20,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1507},"to":{"krate":11,"index":2100}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":23868,"byte_end":23879,"line_start":177,"line_end":177,"column_start":32,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1507},"to":{"krate":11,"index":1559}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24087,"byte_end":24098,"line_start":186,"line_end":186,"column_start":22,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24191,"byte_end":24202,"line_start":192,"line_end":192,"column_start":23,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1507},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":24705,"byte_end":24733,"line_start":207,"line_end":207,"column_start":23,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1521},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":25024,"byte_end":25035,"line_start":216,"line_end":216,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28603,"byte_end":28622,"line_start":323,"line_end":323,"column_start":31,"column_end":50},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28718,"byte_end":28737,"line_start":327,"line_end":327,"column_start":30,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28857,"byte_end":28876,"line_start":333,"line_end":333,"column_start":22,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":28977,"byte_end":28996,"line_start":339,"line_end":339,"column_start":23,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1534},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/capsule_frag.rs","byte_start":29112,"byte_end":29131,"line_start":345,"line_end":345,"column_start":6,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":33984,"byte_end":34004,"line_start":35,"line_end":35,"column_start":30,"column_end":50},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":1186}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34630,"byte_end":34641,"line_start":52,"line_end":52,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34840,"byte_end":34851,"line_start":62,"line_end":62,"column_start":26,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1544},"to":{"krate":30,"index":74}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":34885,"byte_end":34896,"line_start":64,"line_end":64,"column_start":30,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":1186}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35005,"byte_end":35016,"line_start":70,"line_end":70,"column_start":31,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35216,"byte_end":35227,"line_start":76,"line_end":76,"column_start":30,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35355,"byte_end":35366,"line_start":82,"line_end":82,"column_start":34,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35754,"byte_end":35765,"line_start":92,"line_end":92,"column_start":22,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1544},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":35943,"byte_end":35961,"line_start":101,"line_end":101,"column_start":30,"column_end":48},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1558},"to":{"krate":0,"index":1186}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":36047,"byte_end":36065,"line_start":107,"line_end":107,"column_start":6,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37386,"byte_end":37397,"line_start":141,"line_end":141,"column_start":35,"column_end":46},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1544},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37525,"byte_end":37536,"line_start":147,"line_end":147,"column_start":36,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1544},"to":{"krate":1,"index":2922}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":37839,"byte_end":37849,"line_start":159,"line_end":159,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":39264,"byte_end":39274,"line_start":201,"line_end":201,"column_start":18,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1563},"to":{"krate":1,"index":2994}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":39369,"byte_end":39379,"line_start":207,"line_end":207,"column_start":26,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1563},"to":{"krate":30,"index":74}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":39413,"byte_end":39423,"line_start":209,"line_end":209,"column_start":30,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1563},"to":{"krate":0,"index":1186}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":41648,"byte_end":41658,"line_start":303,"line_end":303,"column_start":31,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1563},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":41730,"byte_end":41740,"line_start":307,"line_end":307,"column_start":30,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1563},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":41877,"byte_end":41887,"line_start":313,"line_end":313,"column_start":34,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1563},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/curve.rs","byte_start":42143,"byte_end":42153,"line_start":320,"line_end":320,"column_start":22,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1563},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":42816,"byte_end":42831,"line_start":22,"line_end":22,"column_start":23,"column_end":38},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1575},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":43568,"byte_end":43583,"line_start":43,"line_end":43,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1583},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":44666,"byte_end":44683,"line_start":76,"line_end":76,"column_start":30,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":47,"index":122},"to":{"krate":0,"index":1186}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/dem.rs","byte_start":44930,"byte_end":44933,"line_start":87,"line_end":87,"column_start":6,"column_end":9},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/hashing.rs","byte_start":48262,"byte_end":48266,"line_start":14,"line_end":14,"column_start":6,"column_end":10},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/hashing.rs","byte_start":48995,"byte_end":49007,"line_start":43,"line_end":43,"column_start":6,"column_end":18},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54461,"byte_end":54470,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54677,"byte_end":54686,"line_start":41,"line_end":41,"column_start":22,"column_end":31},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1593},"to":{"krate":1,"index":2913}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54784,"byte_end":54793,"line_start":47,"line_end":47,"column_start":31,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1593},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54859,"byte_end":54868,"line_start":51,"line_end":51,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1593},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":54985,"byte_end":54994,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1593},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":55748,"byte_end":55760,"line_start":78,"line_end":78,"column_start":31,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1605},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":55829,"byte_end":55841,"line_start":82,"line_end":82,"column_start":30,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1605},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":56225,"byte_end":56237,"line_start":93,"line_end":93,"column_start":34,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1605},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":56979,"byte_end":56991,"line_start":118,"line_end":118,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":58721,"byte_end":58728,"line_start":176,"line_end":176,"column_start":31,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1619},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":58840,"byte_end":58847,"line_start":180,"line_end":180,"column_start":30,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1619},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":59120,"byte_end":59127,"line_start":190,"line_end":190,"column_start":34,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1619},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":59714,"byte_end":59721,"line_start":209,"line_end":209,"column_start":20,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1619},"to":{"krate":11,"index":2100}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60029,"byte_end":60036,"line_start":220,"line_end":220,"column_start":32,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1619},"to":{"krate":11,"index":1559}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60244,"byte_end":60251,"line_start":229,"line_end":229,"column_start":22,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1619},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":60340,"byte_end":60347,"line_start":235,"line_end":235,"column_start":23,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1619},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61175,"byte_end":61199,"line_start":256,"line_end":256,"column_start":23,"column_end":47},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1633},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":61774,"byte_end":61781,"line_start":267,"line_end":267,"column_start":6,"column_end":13},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65706,"byte_end":65721,"line_start":380,"line_end":380,"column_start":31,"column_end":46},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65813,"byte_end":65828,"line_start":384,"line_end":384,"column_start":30,"column_end":45},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":65948,"byte_end":65963,"line_start":390,"line_end":390,"column_start":22,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1647},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66060,"byte_end":66075,"line_start":396,"line_end":396,"column_start":23,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1647},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":66191,"byte_end":66206,"line_start":402,"line_end":402,"column_start":6,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/key_frag.rs","byte_start":67491,"byte_end":67502,"line_start":442,"line_end":442,"column_start":10,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75043,"byte_end":75052,"line_start":35,"line_end":35,"column_start":31,"column_end":40},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75129,"byte_end":75138,"line_start":39,"line_end":39,"column_start":30,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75311,"byte_end":75320,"line_start":45,"line_end":45,"column_start":34,"column_end":43},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":75836,"byte_end":75845,"line_start":57,"line_end":57,"column_start":20,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1657},"to":{"krate":11,"index":2100}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76153,"byte_end":76162,"line_start":68,"line_end":68,"column_start":32,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1657},"to":{"krate":11,"index":1559}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76354,"byte_end":76363,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76682,"byte_end":76691,"line_start":85,"line_end":85,"column_start":22,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":76782,"byte_end":76791,"line_start":91,"line_end":91,"column_start":23,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1657},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":77195,"byte_end":77204,"line_start":104,"line_end":104,"column_start":6,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":78459,"byte_end":78468,"line_start":140,"line_end":140,"column_start":31,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":78570,"byte_end":78579,"line_start":144,"line_end":144,"column_start":36,"column_end":45},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1257}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":78744,"byte_end":78753,"line_start":150,"line_end":150,"column_start":34,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79062,"byte_end":79071,"line_start":158,"line_end":158,"column_start":22,"column_end":31},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79162,"byte_end":79171,"line_start":164,"line_end":164,"column_start":23,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1668},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":79594,"byte_end":79600,"line_start":180,"line_end":180,"column_start":6,"column_end":12},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1673},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80504,"byte_end":80510,"line_start":205,"line_end":205,"column_start":22,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1673},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80598,"byte_end":80604,"line_start":211,"line_end":211,"column_start":23,"column_end":29},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1673},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":80873,"byte_end":80882,"line_start":223,"line_end":223,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":81393,"byte_end":81402,"line_start":240,"line_end":240,"column_start":31,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":81497,"byte_end":81506,"line_start":244,"line_end":244,"column_start":30,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":81643,"byte_end":81652,"line_start":250,"line_end":250,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82096,"byte_end":82105,"line_start":261,"line_end":261,"column_start":20,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1678},"to":{"krate":11,"index":2100}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82410,"byte_end":82419,"line_start":272,"line_end":272,"column_start":32,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1678},"to":{"krate":11,"index":1559}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82624,"byte_end":82633,"line_start":281,"line_end":281,"column_start":22,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1678},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":82724,"byte_end":82733,"line_start":287,"line_end":287,"column_start":23,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1678},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":83314,"byte_end":83330,"line_start":302,"line_end":302,"column_start":6,"column_end":22},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":85946,"byte_end":85962,"line_start":372,"line_end":372,"column_start":31,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1690},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86045,"byte_end":86061,"line_start":376,"line_end":376,"column_start":36,"column_end":52},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1690},"to":{"krate":0,"index":1257}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86204,"byte_end":86220,"line_start":382,"line_end":382,"column_start":34,"column_end":50},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1690},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86383,"byte_end":86399,"line_start":388,"line_end":388,"column_start":22,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1690},"to":{"krate":0,"index":1273}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/keys.rs","byte_start":86497,"byte_end":86513,"line_start":394,"line_end":394,"column_start":23,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1690},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/params.rs","byte_start":89332,"byte_end":89342,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/pre.rs","byte_start":91009,"byte_end":91026,"line_start":29,"line_end":29,"column_start":23,"column_end":40},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1706},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":102832,"byte_end":102844,"line_start":54,"line_end":54,"column_start":36,"column_end":48},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":497},"to":{"krate":0,"index":1186}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103361,"byte_end":103370,"line_start":73,"line_end":73,"column_start":9,"column_end":18},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/secret_box.rs","byte_start":103773,"byte_end":103782,"line_start":92,"line_end":92,"column_start":18,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1719},"to":{"krate":1,"index":3251}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104514,"byte_end":104531,"line_start":23,"line_end":23,"column_start":6,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":104768,"byte_end":104785,"line_start":33,"line_end":33,"column_start":23,"column_end":40},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1726},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105165,"byte_end":105182,"line_start":50,"line_end":50,"column_start":6,"column_end":23},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":105407,"byte_end":105424,"line_start":60,"line_end":60,"column_start":23,"column_end":40},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1735},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106027,"byte_end":106047,"line_start":79,"line_end":79,"column_start":23,"column_end":43},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1744},"to":{"krate":1,"index":9410}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106428,"byte_end":106433,"line_start":90,"line_end":90,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":1252}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":106936,"byte_end":106956,"line_start":106,"line_end":106,"column_start":32,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":1252},"to":{"krate":0,"index":1255}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107217,"byte_end":107237,"line_start":113,"line_end":113,"column_start":38,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":1252},"to":{"krate":0,"index":1257}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/traits.rs","byte_start":107558,"byte_end":107578,"line_start":120,"line_end":120,"column_start":36,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":1252},"to":{"krate":0,"index":1259}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","byte_start":116734,"byte_end":116744,"line_start":45,"line_end":45,"column_start":35,"column_end":45},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1316},"to":{"krate":11,"index":1645}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","byte_start":117262,"byte_end":117272,"line_start":66,"line_end":66,"column_start":35,"column_end":45},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1327},"to":{"krate":11,"index":1645}},{"span":{"file_name":"/Users/jacob/.cargo/registry/src/github.com-1ecc6299db9ec823/umbral-pre-0.5.1/src/serde.rs","byte_start":117789,"byte_end":117801,"line_start":87,"line_end":87,"column_start":35,"column_end":47},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1338},"to":{"krate":11,"index":1645}}]}